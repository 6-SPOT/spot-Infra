worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # 🔹 HTTP → HTTPS 리디렉션 ({{ domain }} & {{ subdomain }})
    server {
        listen 80;
        listen [::]:80;
        server_name {{ domain }} {{ subdomain }};

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # 🔹 {{ domain }} - HTTPS + WebSocket 지원
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ domain }};

        # SSL 인증서
        ssl_certificate "/etc/letsencrypt/live/{{ domain }}/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/{{ domain }}/privkey.pem";

        # HSTS 보안 설정
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # WebSocket 및 일반 HTTP 요청 처리
        location / {
            proxy_pass http://{{ fe_private }}:3000;  # Frontend 프라이빗 IP
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api {
            proxy_pass http://{{ be_private }}:8080;  # Backend 프라이빗 IP
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /login/oauth2/code {
            proxy_pass http://{{ be_private }}:8080;  # Backend 프라이빗 IP
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /v3/api-docs {
            proxy_pass http://{{ be_private }}:8080;  # Backend 프라이빗 IP
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # 🔹 {{ subdomain }} - HTTPS (Vault 연결)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ subdomain }};

        # SSL 인증서
        ssl_certificate "/etc/letsencrypt/live/{{ domain }}/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/{{ domain }}/privkey.pem";

        # HSTS 보안 설정
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Reverse Proxy to Vault 서버 (로컬 HTTP)
        location /v1 {
            proxy_pass http://127.0.0.1:8200; # 로컬 Vault 서버
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /ui {
            proxy_pass http://127.0.0.1:8200; # 로컬 Vault 서버
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

stream {
    upstream mysql_backend {
        server {{ be_private }}:3306;  # MySQL 서버 (프라이빗 IP)
    }

    server {
        listen 3306;  # Nginx가 3306 요청을 수신
        proxy_pass mysql_backend;  # 백엔드 MySQL로 전달
        proxy_timeout 600s;
        proxy_connect_timeout 600s;
    }
}